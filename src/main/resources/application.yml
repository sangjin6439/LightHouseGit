spring:
  security:
    oauth2:
      client:
        registration:
          google:
            scope: profile, email # 기본값이 openid, profile, email이지만 openid를 등록하게 되면 서비스마다(카카오, 네이버) OAuth2Service를 만들어야하기 때문에 profile, email만 scope로 지정

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

  cache:
    type: redis

  datasource:
    url: ${DB_JDBC_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: true # <- data.sql을 사용하여 Hibernate에 의해 생성된 스키마를 채우려고 true로 설정
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        default_batch_fetch_size: 1000 #최적화 옵션
#       이것까지 sql보이면 똑같은 sql 두번 보여서 가독성 떨어짐
        show_sql: true #sql 문이 보이도록
        format_sql: true  #sql 계층식 표현
        use_sql_comments: true
        type:
          descriptor:
            sql: trace
    #OSIV 설정 끄기
    open-in-view: false
  sql:
    init:
      mode: always # <- 모든 db의 스크립트를 동작시킴

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.type: trace


springdoc:
  version: '3.2.0'
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
#    path: /swagger-ui.html
    path: /
    disable-swagger-default-url: true
    display-query-params-without-oauth2: true
    doc-expansion: none
  paths-to-match:
    - /users/**
    - /examples/**
    - /submissions/**
    - /posts/**
    - /comment/**
    - /likes/**
    - /auth/**
    - /everlearning/**
    - /subscribe/**

jwt:
  secret: ${JWT_SECRET}
  access-token-validity-in-milliseconds: ${access-token-validity-in-milliseconds}
